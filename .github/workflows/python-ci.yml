# .github/workflows/python-ci.yml

name: Python CI - FineTune Embedding

on:
  push:
    branches: [ "main", "master" ] # Adjust branch names if needed
  pull_request:
    branches: [ "main", "master" ] # Adjust branch names if needed

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"] # Test against multiple Python versions

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install using pyproject.toml if it exists and defines dependencies
        if [ -f pyproject.toml ]; then
          pip install -e ".[dev]"
        # Fallback to requirements.txt if pyproject.toml doesn't handle deps
        elif [ -f requirements.txt ]; then
          pip install -r requirements.txt
          # Install dev tools separately if needed
          pip install pytest pytest-mock pytest-cov flake8 black isort mypy
        else
          echo "Warning: No pyproject.toml or requirements.txt found. Skipping dependency installation."
        fi

    - name: Lint and Format Check with Ruff
      run: |
        # Check linting rules (including complexity C90) and formatting
        ruff check . --statistics
        ruff format --check .

    - name: Type check with mypy
      run: |
        # Run mypy on the main package source
        mypy finetune_embedding/

    - name: Run tests with pytest
      run: |
        # -v: verbose output
        # --cov: generate coverage report for the main package
        # Change package name here
        pytest -v --cov=finetune_embedding --cov-report=xml

    # Optional: Upload coverage report (requires Codecov setup)
    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v4
    #   with:
    #     token: ${{ secrets.CODECOV_TOKEN }} # Add CODECOV_TOKEN secret to repo settings
    #     files: ./coverage.xml
    #     fail_ci_if_error: true
